/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT`
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_italian.h"

// Layer definitions
#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6
// -----------------

#define xxx &none
#define ___ &trans


// tapping term definition
#define TAP_TERM_MS 200
#define QUICK_TAP_MS 125

// 34 keys physical layout
#define LEFT_KEYS 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 // left-hand keys
#define RIGHT_KEYS 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 // right-hand keys
#define THUMBS 30 31 32 33 // thumb keys


&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};

// layer tap config
&lt {
    flavor = "balanced";
    tapping-term-ms = <TAP_TERM_MS>;
    quick-tap-ms = <QUICK_TAP_MS>;      // double-tap + hold repeats tap-key
};


/ {
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "QUICK_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
		// HOME ROW MODS
		hml: left_hand_positional_hold_tap {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <TAP_TERM_MS>;
			quick-tap-ms = <QUICK_TAP_MS>;       // double-tap + hold repeats tap-key
			require-prior-idle-ms = <150>;       // do not activate HOLD during typing flow
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <RIGHT_KEYS THUMBS>;
			hold-trigger-on-release;
		};

		hmr: right_hand_positional_hold_tap {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <TAP_TERM_MS>;
			quick-tap-ms = <QUICK_TAP_MS>;       // double-tap + hold repeats tap-key
			require-prior-idle-ms = <150>;       // do not activate HOLD during typing flow
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <LEFT_KEYS THUMBS>;
			hold-trigger-on-release;
		};

		// TAP DANCES
		comma_semi: comma_semi {
			compatible = "zmk,behavior-mod-morph";
			#binding-cells = <0>;
			bindings = <&kp COMMA>, <&kp SEMICOLON>;
			mods = <(MOD_LSFT)>;
		};

		dot_colon: dot_colon {
			compatible = "zmk,behavior-mod-morph";
			#binding-cells = <0>;
			bindings = <&kp DOT>, <&kp COLON>;
			mods = <(MOD_LSFT)>;
		};
	
		minus_under: minus_under {
			compatible = "zmk,behavior-mod-morph";
			#binding-cells = <0>;
			bindings = <&kp MINUS>, <&kp UNDER>;
			mods = <(MOD_LSFT)>;
		};

		sp_n: sp_n {
			compatible = "zmk,behavior-mod-morph";
			#binding-cells = <0>;
			bindings = <&uc 0x00F1>, <&uc 0x00D1>;
			mods = <(MOD_LSFT)>;
		};
	};

	macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
			label = "ZM_unstick";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};
	};

	combos {
		compatible = "zmk,combos";
		// both right thumb keys
		combo_accent {
			timeout-ms = <200>;
			key-positions = <32 33>;
			bindings = <&mo ACCENT>;
		};
		// internal-left & external-right thumb keys
		combo_sym2 {
			timeout-ms = <200>;
			key-positions = <31 33>;
			bindings = <&mo SYM2>;
		};
		// both left thumb keys
		combo_settings {
			timeout-ms = <200>;
			key-positions = <30 31>;
			bindings = <&mo SETTINGS>;
		};
		// left index & middle fingers (home-row)
		// hold control & space for Adobe workflow
		combo_ctrl_space {
			timeout-ms = <200>;
			key-positions = <12 13>;
			bindings = <&kp LC(SPACE)>;
			layers = <BASE>;
		};


	};

	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
				//╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮   ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
						&kp Q          &kp W          &kp E          &kp R          &kp T               &kp Y        &kp U          &kp I          &kp O          &kp P
				//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
						&hml LGUI A    &hml LALT S    &hml LCTRL  D  &hml LSHIFT F  &kp G               &kp H        &hmr RSHIFT J  &hmr RCTRL K   &hmr RALT L   &hmr RGUI &sp_n
				//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
						&kp Z          &kp X          &kp C          &kp V          &kp B               &kp N        &kp M          &comma_semi    &dot_colon     &minus_under
				//╰──────────────┴──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┴──────────────╯
																												 &kp SPACE		  &kp TAB      				&kp RET 		 &lt SYM BSPC
             //                              					 ╰──────────────┴──────────────╯   ╰──────────────┴──────────────╯	
			>;
		};

		// Numbers and high frequency symbols
		sym_layer {
			label = "Sym";
			bindings = <
				//╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮     ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
					  &kp GRAVE      &kp DQT        &kp PLUS       &kp ASTRK      &kp PERCENT          &kp PIPE       &kp LBRC       &kp RBRC       &kp QMARK       &kp RA(E)
				//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤     ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
						&kp AT         &kp SQT        &kp LT         &kp GT         &kp EQUAL            &kp AMPS       &kp LPAR       &kp RPAR       &kp DLLR        xxx
				//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤     ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
					  &kp ES_DEG     &kp NUBS       &kp FSLH       &kp HASH       &kp CARET            &kp TILDE      &kp LBKT       &kp RBKT       &kp EXCL        &kp ES_QUES
				//╰──────────────┴──────────────┼──────────────┼──────────────┼──────────────┤     ├──────────────┼──────────────┼──────────────┼──────────────┴──────────────╯
																													  ___            ___                  ___            xxx          
             //                                        ╰──────────────┴──────────────╯     ╰──────────────┴──────────────╯
			>;
		};

		// Main modifiers and arrow keys
		ext_layer {
			label = "Mods";
			bindings = <
			&kp ESC  &kp C_PREV &kp C_PP  &kp C_NEXT  &kp C_PAUSE    	&kp PG_UP  &kp HOME &kp UP &kp END &kp CAPS
			&sk LALT &sk LGUI  &sk LSHIFT  &sk LCTRL  &kp RALT 			&kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT   &kp DEL
			&kp LC(Z)  &kp LC(X) &kp LC(C) &kp TAB   &kp LC(V)          &kp LC(BSPC) &kp BSPC &trans &trans  &trans
																		&trans &kp LCTRL    &kp ENTER  &mo FNC 
			>;
		};

		// Function keys with modifiers
		fnc_layer {
			label = "FRow";
			bindings = <
			&kp F1 &kp F2 &kp F3 &kp F4 &kp F5                  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
			&sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &kp RALT     &kp F11 &kp F12  &kp PRINTSCREEN &trans &trans
			&none &none &none &none &none				          &none &none &none &none &none 
							  &none &none              &none &none  
			>;
		};

		// Low frequency symbols.
		symbols_2_layer {
			label = "Sym.2";
			bindings = <
			&kp ES_CARET &kp ES_UNDER &kp ES_PND &kp ES_EUR &kp ES_HASH         &none &none &none &none &none 
			&kp ES_BKTK &kp ES_TILDE &kp ES_BSLH &kp ES_PIPE &kp ES_AND         &none &none &none &none &none
			&none 			&none 			 &kp ES_SECT &kp ES_CCED &kp ES_DEG				  &none &none &none &none &none
																	&none &none        	&none &none 
			>;
		};

		// Used to type regional accents.
		accent_layer {
			label = "Accent";
			bindings = <
			&none &none &none &kp ES_CEGR &none                         &none &none &none &none &none 
			&kp ES_AGRV &kp ES_IGRV &kp ES_OGRV &kp ES_EGRV &kp ES_EACU &none &none &none &none &none
			&none &none &none &kp ES_UGRV &none                         &none &none &none &none &none
									&none &none                         &none &none 
			>;
		};

		// Used to change the keyboard's settings.
		settings_layer {
				label = "Sett.";
				bindings = <
				&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader 
				&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none
				&studio_unlock &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &studio_unlock
										&none &none                         &none &none 
				>;
		};
	};
};
